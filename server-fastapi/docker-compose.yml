version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: pdf_rag
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO S3-compatible storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Development Server
  fastapi-dev:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - minio
      - redis
      - qdrant
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pdf_rag
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
    volumes:
      - .:/app  # Mount source code for hot reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Celery Worker for Development (disabled - not needed)
  # celery-dev:
  #   build: .
  #   depends_on:
  #     - postgres
  #     - minio
  #     - redis
  #     - qdrant
  #   environment:
  #     - DEBUG=true
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pdf_rag
  #     - REDIS_URL=redis://redis:6379/0
  #     - QDRANT_URL=http://qdrant:6333
  #     - MINIO_ENDPOINT=minio:9000
  #     - MINIO_ACCESS_KEY=minioadmin
  #     - MINIO_SECRET_KEY=minioadmin
  #     - GOOGLE_API_KEY=${GOOGLE_API_KEY}
  #     - JWT_SECRET_KEY=${JWT_SECRET_KEY}
  #     - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
  #   volumes:
  #     - .:/app  # Mount source code for hot reload
  #     - uploads_data:/app/uploads
  #   command: celery -A app.workers.celery_app worker --loglevel=info
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  uploads_data:
    driver: local
